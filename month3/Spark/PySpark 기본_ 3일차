{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"13u-ByLwpt-Vkg5qWdNgHxcdEGVo9FAGx","timestamp":1686714471606},{"file_id":"1W5booKKTZOmJX8F0kp9vaYBm9hGhhsE8","timestamp":1611853093485}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","source":["SQL 실습"],"metadata":{"id":"Ue9zKt4oBIwa"}},{"cell_type":"code","source":["!pip install SQLAlchemy==1.4.47"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vHy1ETM4BKkC","executionInfo":{"status":"ok","timestamp":1686714534346,"user_tz":-540,"elapsed":10201,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"5186eded-ac0a-4064-cb20-b8ae0f916828"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting SQLAlchemy==1.4.47\n","  Downloading SQLAlchemy-1.4.47-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m30.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy==1.4.47) (2.0.2)\n","Installing collected packages: SQLAlchemy\n","  Attempting uninstall: SQLAlchemy\n","    Found existing installation: SQLAlchemy 2.0.10\n","    Uninstalling SQLAlchemy-2.0.10:\n","      Successfully uninstalled SQLAlchemy-2.0.10\n","Successfully installed SQLAlchemy-1.4.47\n"]}]},{"cell_type":"code","source":["%load_ext sql\n","\n","%sql postgresql://guest:Guest1!*@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E2gKCnmTBQpJ","executionInfo":{"status":"ok","timestamp":1686714755223,"user_tz":-540,"elapsed":2190,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"13818965-1f2a-41c1-bd52-e2cad534718e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The sql extension is already loaded. To reload it, use:\n","  %reload_ext sql\n"]}]},{"cell_type":"code","source":["%%sql\n","\n","SELECT\n","    DATE(ts) \"DATE\",\n","    sessionId\n","FROM raw_data.session_timestamp\n","ORDER BY 1 DESC\n","LIMIT 10;"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":277},"id":"_eOr-_VnCJ_d","executionInfo":{"status":"ok","timestamp":1686714946525,"user_tz":-540,"elapsed":4332,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"c18a2a3a-90fa-4278-dbbc-a8671e7c3049"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","10 rows affected.\n"]},{"output_type":"execute_result","data":{"text/plain":["[(datetime.date(2019, 11, 30), '081df107a4559e1520aa32aae12c25e6'),\n"," (datetime.date(2019, 11, 30), '055814ffb32c822c097211fe3276b16f'),\n"," (datetime.date(2019, 11, 30), '0a2fcf7af17b4c9360422e84ef5d5d68'),\n"," (datetime.date(2019, 11, 30), '05a310e956d325b332d09f94ec979073'),\n"," (datetime.date(2019, 11, 30), '04b599dda577cf763f356fda1b81fc44'),\n"," (datetime.date(2019, 11, 30), '02f931a5fd1b2102d1a8d35e98f15efc'),\n"," (datetime.date(2019, 11, 30), '055696c84942aa2fd6dbbf95b4ca65f5'),\n"," (datetime.date(2019, 11, 30), '0336f77317754a53ffef9ceba45f7ef3'),\n"," (datetime.date(2019, 11, 30), '097b1434f8095050c55a0920a263ac94'),\n"," (datetime.date(2019, 11, 30), '0097d9f20753f2e606a36c45693562b2')]"],"text/html":["<table>\n","    <tr>\n","        <th>date</th>\n","        <th>sessionid</th>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>081df107a4559e1520aa32aae12c25e6</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>055814ffb32c822c097211fe3276b16f</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>0a2fcf7af17b4c9360422e84ef5d5d68</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>05a310e956d325b332d09f94ec979073</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>04b599dda577cf763f356fda1b81fc44</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>02f931a5fd1b2102d1a8d35e98f15efc</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>055696c84942aa2fd6dbbf95b4ca65f5</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>0336f77317754a53ffef9ceba45f7ef3</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>097b1434f8095050c55a0920a263ac94</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-30</td>\n","        <td>0097d9f20753f2e606a36c45693562b2</td>\n","    </tr>\n","</table>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["%%sql\n","\n","SELECT\n","    DATE(ts) date,\n","    COUNT(sessionId)\n","FROM raw_data.session_timestamp\n","GROUP BY 1\n","ORDER BY 2 DESC\n","LIMIT 10;"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":277},"id":"obx62etyC70E","executionInfo":{"status":"ok","timestamp":1686715033517,"user_tz":-540,"elapsed":526,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"65e43dc1-f346-4593-dac4-927aa87a7844"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","10 rows affected.\n"]},{"output_type":"execute_result","data":{"text/plain":["[(datetime.date(2019, 10, 23), 678),\n"," (datetime.date(2019, 11, 13), 671),\n"," (datetime.date(2019, 11, 12), 668),\n"," (datetime.date(2019, 10, 11), 665),\n"," (datetime.date(2019, 10, 29), 660),\n"," (datetime.date(2019, 10, 21), 653),\n"," (datetime.date(2019, 11, 5), 652),\n"," (datetime.date(2019, 11, 11), 651),\n"," (datetime.date(2019, 10, 14), 648),\n"," (datetime.date(2019, 11, 7), 645)]"],"text/html":["<table>\n","    <tr>\n","        <th>date</th>\n","        <th>count</th>\n","    </tr>\n","    <tr>\n","        <td>2019-10-23</td>\n","        <td>678</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-13</td>\n","        <td>671</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-12</td>\n","        <td>668</td>\n","    </tr>\n","    <tr>\n","        <td>2019-10-11</td>\n","        <td>665</td>\n","    </tr>\n","    <tr>\n","        <td>2019-10-29</td>\n","        <td>660</td>\n","    </tr>\n","    <tr>\n","        <td>2019-10-21</td>\n","        <td>653</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-05</td>\n","        <td>652</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-11</td>\n","        <td>651</td>\n","    </tr>\n","    <tr>\n","        <td>2019-10-14</td>\n","        <td>648</td>\n","    </tr>\n","    <tr>\n","        <td>2019-11-07</td>\n","        <td>645</td>\n","    </tr>\n","</table>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["%%sql\n","\n","SELECT\n","    DATE(ts) date,\n","    COUNT(sessionId)\n","FROM raw_data.session_timestamp\n","GROUP BY 1\n","ORDER BY 1\n","LIMIT 10;"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":277},"id":"cYl8b9HLDRiE","executionInfo":{"status":"ok","timestamp":1686715059842,"user_tz":-540,"elapsed":348,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"3e82041b-6e06-4706-c335-8a378a0758e7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","10 rows affected.\n"]},{"output_type":"execute_result","data":{"text/plain":["[(datetime.date(2019, 5, 1), 147),\n"," (datetime.date(2019, 5, 2), 161),\n"," (datetime.date(2019, 5, 3), 150),\n"," (datetime.date(2019, 5, 4), 142),\n"," (datetime.date(2019, 5, 5), 144),\n"," (datetime.date(2019, 5, 6), 164),\n"," (datetime.date(2019, 5, 7), 180),\n"," (datetime.date(2019, 5, 8), 161),\n"," (datetime.date(2019, 5, 9), 169),\n"," (datetime.date(2019, 5, 10), 176)]"],"text/html":["<table>\n","    <tr>\n","        <th>date</th>\n","        <th>count</th>\n","    </tr>\n","    <tr>\n","        <td>2019-05-01</td>\n","        <td>147</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-02</td>\n","        <td>161</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-03</td>\n","        <td>150</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-04</td>\n","        <td>142</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-05</td>\n","        <td>144</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-06</td>\n","        <td>164</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-07</td>\n","        <td>180</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-08</td>\n","        <td>161</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-09</td>\n","        <td>169</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-10</td>\n","        <td>176</td>\n","    </tr>\n","</table>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["%%sql\n","\n","SELECT\n","    DATE(st.ts) date,\n","    COUNT(DISTINCT usc.userId)\n","FROM raw_data.session_timestamp st\n","JOIN raw_data.user_session_channel usc ON st.sessionId = usc.sessionId\n","GROUP BY 1\n","ORDER BY 1\n","LIMIT 10;"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":277},"id":"accTY6j3DXHs","executionInfo":{"status":"ok","timestamp":1686715170725,"user_tz":-540,"elapsed":524,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"6bd9bff5-3522-44d7-87da-57057e7aa12c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","10 rows affected.\n"]},{"output_type":"execute_result","data":{"text/plain":["[(datetime.date(2019, 5, 1), 119),\n"," (datetime.date(2019, 5, 2), 127),\n"," (datetime.date(2019, 5, 3), 130),\n"," (datetime.date(2019, 5, 4), 122),\n"," (datetime.date(2019, 5, 5), 124),\n"," (datetime.date(2019, 5, 6), 133),\n"," (datetime.date(2019, 5, 7), 147),\n"," (datetime.date(2019, 5, 8), 135),\n"," (datetime.date(2019, 5, 9), 145),\n"," (datetime.date(2019, 5, 10), 144)]"],"text/html":["<table>\n","    <tr>\n","        <th>date</th>\n","        <th>count</th>\n","    </tr>\n","    <tr>\n","        <td>2019-05-01</td>\n","        <td>119</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-02</td>\n","        <td>127</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-03</td>\n","        <td>130</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-04</td>\n","        <td>122</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-05</td>\n","        <td>124</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-06</td>\n","        <td>133</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-07</td>\n","        <td>147</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-08</td>\n","        <td>135</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-09</td>\n","        <td>145</td>\n","    </tr>\n","    <tr>\n","        <td>2019-05-10</td>\n","        <td>144</td>\n","    </tr>\n","</table>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["%%sql\n","\n","SELECT\n","    COUNT(1)\n","FROM raw_data.user_session_channel\n","WHERE channel ilike '%o%'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":94},"id":"DVNOTGW5D9tN","executionInfo":{"status":"ok","timestamp":1686715286148,"user_tz":-540,"elapsed":5,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"91d8ddd8-e0ad-4168-8b12-d503e0a9a53b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","1 rows affected.\n"]},{"output_type":"execute_result","data":{"text/plain":["[(67768,)]"],"text/html":["<table>\n","    <tr>\n","        <th>count</th>\n","    </tr>\n","    <tr>\n","        <td>67768</td>\n","    </tr>\n","</table>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# 판다스랑 연결\n","result = %sql SELECT * FROM raw_data.user_session_channel\n","\n","df = result.DataFrame()\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"hGeeWhtPEIdV","executionInfo":{"status":"ok","timestamp":1686715357471,"user_tz":-540,"elapsed":1810,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"561dc0e8-4e3d-490f-de96-812a9d117b78"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","101520 rows affected.\n"]},{"output_type":"execute_result","data":{"text/plain":["   userid                         sessionid    channel\n","0    1651  0004289ee1c7b8b08c77e19878106ae3    Organic\n","1    1197  00053f5e11d1fe4e49a221165b39abc9   Facebook\n","2    1401  00056c20eb5a029583db75506953f1d9   Facebook\n","3    1399  00063cb5da1826febf178b669eea3250   Facebook\n","4    1667  000958fdaefe0dd06f5d7c4e4a5f28d1  Instagram"],"text/html":["\n","  <div id=\"df-bb2d0e84-4704-4f05-ad4e-2939f71cf241\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userid</th>\n","      <th>sessionid</th>\n","      <th>channel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1651</td>\n","      <td>0004289ee1c7b8b08c77e19878106ae3</td>\n","      <td>Organic</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1197</td>\n","      <td>00053f5e11d1fe4e49a221165b39abc9</td>\n","      <td>Facebook</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1401</td>\n","      <td>00056c20eb5a029583db75506953f1d9</td>\n","      <td>Facebook</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1399</td>\n","      <td>00063cb5da1826febf178b669eea3250</td>\n","      <td>Facebook</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1667</td>\n","      <td>000958fdaefe0dd06f5d7c4e4a5f28d1</td>\n","      <td>Instagram</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb2d0e84-4704-4f05-ad4e-2939f71cf241')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bb2d0e84-4704-4f05-ad4e-2939f71cf241 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bb2d0e84-4704-4f05-ad4e-2939f71cf241');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df.groupby(['channel'])['userid'].count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9vyMBx6OEeCi","executionInfo":{"status":"ok","timestamp":1686715453699,"user_tz":-540,"elapsed":335,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"c8bab992-fcd2-4290-9acf-d7cd57693d82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["channel\n","Facebook     16791\n","Google       16982\n","Instagram    16831\n","Naver        16921\n","Organic      16904\n","Youtube      17091\n","Name: userid, dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["result = %sql SELECT * FROM raw_data.session_timestamp\n","df_st = result.DataFrame()\n","\n","df_st['date'] = df_st['ts'].apply(lambda x: f\"{x.year:d}-{x.month:02d}-{x.day:02d}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8qflB7peE17o","executionInfo":{"status":"ok","timestamp":1686715559307,"user_tz":-540,"elapsed":2516,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"6582cccd-40d3-4e20-aeb8-51806f248b1f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","101520 rows affected.\n"]},{"output_type":"execute_result","data":{"text/plain":["0         2019-07-29\n","1         2019-06-24\n","2         2019-09-26\n","3         2019-10-16\n","4         2019-05-22\n","             ...    \n","101515    2019-11-03\n","101516    2019-08-30\n","101517    2019-07-17\n","101518    2019-09-24\n","101519    2019-11-04\n","Name: date, Length: 101520, dtype: object"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["df_st.groupby(['date']).size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QBhADr6WFSKg","executionInfo":{"status":"ok","timestamp":1686715587360,"user_tz":-540,"elapsed":5,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"fe347934-611b-4cf2-ee1b-0853b7fad7ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["date\n","2019-05-01    147\n","2019-05-02    161\n","2019-05-03    150\n","2019-05-04    142\n","2019-05-05    144\n","             ... \n","2019-11-26    633\n","2019-11-27    617\n","2019-11-28    516\n","2019-11-29    531\n","2019-11-30    562\n","Length: 214, dtype: int64"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["df_st.groupby(['date'])['sessionid'].count().reset_index(name='count').sort_values('date', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"LiscMq2zFW0E","executionInfo":{"status":"ok","timestamp":1686715679898,"user_tz":-540,"elapsed":350,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"f4f7ee63-a79d-4557-eb1a-e1cb352bdfd1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           date  count\n","213  2019-11-30    562\n","212  2019-11-29    531\n","211  2019-11-28    516\n","210  2019-11-27    617\n","209  2019-11-26    633\n","..          ...    ...\n","4    2019-05-05    144\n","3    2019-05-04    142\n","2    2019-05-03    150\n","1    2019-05-02    161\n","0    2019-05-01    147\n","\n","[214 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-63c0cd3f-aa32-45cb-9b86-ca4f9cc21693\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>213</th>\n","      <td>2019-11-30</td>\n","      <td>562</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>2019-11-29</td>\n","      <td>531</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>2019-11-28</td>\n","      <td>516</td>\n","    </tr>\n","    <tr>\n","      <th>210</th>\n","      <td>2019-11-27</td>\n","      <td>617</td>\n","    </tr>\n","    <tr>\n","      <th>209</th>\n","      <td>2019-11-26</td>\n","      <td>633</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019-05-05</td>\n","      <td>144</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-05-04</td>\n","      <td>142</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019-05-03</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019-05-02</td>\n","      <td>161</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2019-05-01</td>\n","      <td>147</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>214 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63c0cd3f-aa32-45cb-9b86-ca4f9cc21693')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-63c0cd3f-aa32-45cb-9b86-ca4f9cc21693 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-63c0cd3f-aa32-45cb-9b86-ca4f9cc21693');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"xAqhTDfuWrcM"},"source":["PySpark을 로컬머신에 설치하고 노트북을 사용하기 보다는 머신러닝 관련 다양한 라이브러리가 이미 설치되었고 좋은 하드웨어를 제공해주는 Google Colab을 통해 실습을 진행한다."]},{"cell_type":"markdown","metadata":{"id":"XIA23YgbXKJd"},"source":["이를 위해 pyspark과 Py4J 패키지를 설치한다. Py4J 패키지는 파이썬 프로그램이 자바가상머신상의 오브젝트들을 접근할 수 있게 해준다. Local Standalone Spark을 사용한다."]},{"cell_type":"code","metadata":{"id":"NbT0rpGfVdiq","outputId":"3941c069-54e1-4441-b816-8822004f00b0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686715766562,"user_tz":-540,"elapsed":45672,"user":{"displayName":"문건희","userId":"18327497055746524936"}}},"source":["!pip install pyspark==3.0.1 py4j==0.10.9"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pyspark==3.0.1\n","  Downloading pyspark-3.0.1.tar.gz (204.2 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m204.2/204.2 MB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting py4j==0.10.9\n","  Downloading py4j-0.10.9-py2.py3-none-any.whl (198 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m198.6/198.6 kB\u001b[0m \u001b[31m11.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hBuilding wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.0.1-py2.py3-none-any.whl size=204612229 sha256=5f403c56537988e636aedb0c9aee11d35a456a73c928a8b92ecd8b587756726a\n","  Stored in directory: /root/.cache/pip/wheels/19/b0/c8/6cb894117070e130fc44352c2a13f15b6c27e440d04a84fb48\n","Successfully built pyspark\n","Installing collected packages: py4j, pyspark\n","  Attempting uninstall: py4j\n","    Found existing installation: py4j 0.10.9.7\n","    Uninstalling py4j-0.10.9.7:\n","      Successfully uninstalled py4j-0.10.9.7\n","Successfully installed py4j-0.10.9 pyspark-3.0.1\n"]}]},{"cell_type":"markdown","metadata":{"id":"1iHGbrRlA01u"},"source":["지금부터 실습은 Redshift에 있는 데이터를 가지고 해볼 예정이고 그래서 Redshift 관련 JAR 파일을 설치해야함"]},{"cell_type":"code","metadata":{"id":"OdTTZZqVA0Xa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716039017,"user_tz":-540,"elapsed":1314,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"919f2635-08fd-4c79-b21a-4cc02f244ceb"},"source":["!cd /usr/local/lib/python3.10/dist-packages/pyspark/jars && wget https://s3.amazonaws.com/redshift-downloads/drivers/jdbc/1.2.20.1043/RedshiftJDBC42-no-awssdk-1.2.20.1043.jar"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-06-14 04:13:57--  https://s3.amazonaws.com/redshift-downloads/drivers/jdbc/1.2.20.1043/RedshiftJDBC42-no-awssdk-1.2.20.1043.jar\n","Resolving s3.amazonaws.com (s3.amazonaws.com)... 52.216.101.221, 54.231.163.128, 54.231.229.80, ...\n","Connecting to s3.amazonaws.com (s3.amazonaws.com)|52.216.101.221|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 2413910 (2.3M) [application/java-archive]\n","Saving to: ‘RedshiftJDBC42-no-awssdk-1.2.20.1043.jar’\n","\n","RedshiftJDBC42-no-a 100%[===================>]   2.30M  4.75MB/s    in 0.5s    \n","\n","2023-06-14 04:13:58 (4.75 MB/s) - ‘RedshiftJDBC42-no-awssdk-1.2.20.1043.jar’ saved [2413910/2413910]\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"Ew_eTGrvXlDw"},"source":["**Spark Session:** 이번 SparkSession은 spark.jars를 통해 앞서 다운로드받은 Redshift 연결을 위한 JDBC 드라이버를 사용함 (.config(\"spark.jars\", ...)"]},{"cell_type":"code","metadata":{"id":"3vm6tgcPXdnR"},"source":["from pyspark.sql import SparkSession\n","\n","spark = SparkSession \\\n","    .builder \\\n","    .appName(\"Python Spark SQL basic example\") \\\n","    .config(\"spark.jars\", \"/usr/local/lib/python3.10/dist-packages/pyspark/jars/RedshiftJDBC42-no-awssdk-1.2.20.1043.jar\") \\\n","    .getOrCreate()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LSs_1PYaYWxI","colab":{"base_uri":"https://localhost:8080/","height":219},"executionInfo":{"status":"ok","timestamp":1686716292706,"user_tz":-540,"elapsed":329,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"4aee4b4a-510c-4372-d88b-2a0063885d42"},"source":["spark"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pyspark.sql.session.SparkSession at 0x7fa3ff3a4ac0>"],"text/html":["\n","            <div>\n","                <p><b>SparkSession - in-memory</b></p>\n","                \n","        <div>\n","            <p><b>SparkContext</b></p>\n","\n","            <p><a href=\"http://2908a37b25d5:4040\">Spark UI</a></p>\n","\n","            <dl>\n","              <dt>Version</dt>\n","                <dd><code>v3.0.1</code></dd>\n","              <dt>Master</dt>\n","                <dd><code>local[*]</code></dd>\n","              <dt>AppName</dt>\n","                <dd><code>Python Spark SQL basic example</code></dd>\n","            </dl>\n","        </div>\n","        \n","            </div>\n","        "]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","metadata":{"id":"H7Wl1fgP--_n"},"source":["# **SparkSQL 맛보기**"]},{"cell_type":"markdown","metadata":{"id":"XSqSK6-T3SlS"},"source":["판다스로 일단 CSV 파일 하나 로드하기"]},{"cell_type":"code","metadata":{"id":"MlppT68QCorD"},"source":["import pandas as pd\n","\n","namegender_pd = pd.read_csv(\"https://s3-geospatial.s3-us-west-2.amazonaws.com/name_gender.csv\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"21mud2c_CpoT","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1686716306818,"user_tz":-540,"elapsed":425,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"733b743e-0532-4e81-c9ff-a743ff854a5e"},"source":["namegender_pd.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       name  gender\n","0  Adaleigh       F\n","1     Amryn  Unisex\n","2    Apurva  Unisex\n","3    Aryion       M\n","4    Alixia       F"],"text/html":["\n","  <div id=\"df-e7812ee6-9c20-4424-87b7-eb4ddacdd9b8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adaleigh</td>\n","      <td>F</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Amryn</td>\n","      <td>Unisex</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Apurva</td>\n","      <td>Unisex</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aryion</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Alixia</td>\n","      <td>F</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7812ee6-9c20-4424-87b7-eb4ddacdd9b8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e7812ee6-9c20-4424-87b7-eb4ddacdd9b8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e7812ee6-9c20-4424-87b7-eb4ddacdd9b8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"hGF0RDpI1nFk","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1686716308057,"user_tz":-540,"elapsed":3,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"21f3315f-7d23-4081-e61d-d462b57627a7"},"source":["namegender_pd.groupby([\"gender\"]).count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        name\n","gender      \n","F         65\n","M         28\n","Unisex     7"],"text/html":["\n","  <div id=\"df-49035a6f-8217-4a43-97e4-d5cd2945bbdb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>F</th>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>M</th>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>Unisex</th>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49035a6f-8217-4a43-97e4-d5cd2945bbdb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-49035a6f-8217-4a43-97e4-d5cd2945bbdb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-49035a6f-8217-4a43-97e4-d5cd2945bbdb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","metadata":{"id":"6YpBBzy11wwV"},"source":["판다스 데이터프레임을 Spark 데이터프레임으로 변환하기"]},{"cell_type":"code","metadata":{"id":"eBXgab2KCsUV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716349549,"user_tz":-540,"elapsed":6659,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"1c699a6b-5f8f-42d6-87b5-470d5c7c0d09"},"source":["namegender_df = spark.createDataFrame(namegender_pd)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pyspark/sql/pandas/conversion.py:327: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.\n","  for column, series in pdf.iteritems():\n"]}]},{"cell_type":"code","metadata":{"id":"oUlABaYtCvKC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716350300,"user_tz":-540,"elapsed":3,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"e42b383c-11bc-460f-ad9f-6509d90093a0"},"source":["namegender_df.printSchema()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- name: string (nullable = true)\n"," |-- gender: string (nullable = true)\n","\n"]}]},{"cell_type":"code","metadata":{"id":"U9oPMiJRCy4R","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716354210,"user_tz":-540,"elapsed":3912,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"164a48a2-9278-44e2-bf9e-8b5964602d1d"},"source":["namegender_df.show()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------+------+\n","|      name|gender|\n","+----------+------+\n","|  Adaleigh|     F|\n","|     Amryn|Unisex|\n","|    Apurva|Unisex|\n","|    Aryion|     M|\n","|    Alixia|     F|\n","|Alyssarose|     F|\n","|    Arvell|     M|\n","|     Aibel|     M|\n","|   Atiyyah|     F|\n","|     Adlie|     F|\n","|    Anyely|     F|\n","|    Aamoni|     F|\n","|     Ahman|     M|\n","|    Arlane|     F|\n","|   Armoney|     F|\n","|   Atzhiry|     F|\n","| Antonette|     F|\n","|   Akeelah|     F|\n","| Abdikadir|     M|\n","|    Arinze|     M|\n","+----------+------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","metadata":{"id":"bt432nZD13md","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716366015,"user_tz":-540,"elapsed":5412,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"cee40d12-5f5e-4a8c-f0f9-f2cc94de71ff"},"source":["namegender_df.groupBy([\"gender\"]).count().collect()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(gender='F', count=65),\n"," Row(gender='M', count=28),\n"," Row(gender='Unisex', count=7)]"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"Dj4z2JTS-ykt"},"source":["# https://towardsdatascience.com/pyspark-and-sparksql-basics-6cb4bf967e53"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PJmaTT5619bl"},"source":["데이터프레임을 테이블뷰로 만들어서 SparkSQL로 처리해보기"]},{"cell_type":"code","metadata":{"id":"wCHeqrAW6n-E"},"source":["namegender_df.createOrReplaceTempView(\"namegender\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ghlHnLJv-Xie"},"source":["namegender_group_df = spark.sql(\"SELECT gender, count(1) FROM namegender GROUP BY 1\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LbbfGZHP-y4w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716380944,"user_tz":-540,"elapsed":3153,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"78f56b86-a4eb-4091-e3f2-57044b10f46d"},"source":["namegender_group_df.collect()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(gender='F', count(1)=65),\n"," Row(gender='M', count(1)=28),\n"," Row(gender='Unisex', count(1)=7)]"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","metadata":{"id":"_vqm-DsuH_hO"},"source":["Redshift와 연결해서 테이블들을 데이터프레임으로 로딩하기"]},{"cell_type":"code","metadata":{"id":"EEaNuN3xKNXm"},"source":["df_user_session_channel = spark.read \\\n","    .format(\"jdbc\") \\\n","    .option(\"driver\", \"com.amazon.redshift.jdbc42.Driver\") \\\n","    .option(\"url\", \"jdbc:redshift://learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev?user=guest&password=Guest1!*\") \\\n","    .option(\"dbtable\", \"raw_data.user_session_channel\") \\\n","    .load()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IQlBPcO_INv9"},"source":["df_session_timestamp = spark.read \\\n","    .format(\"jdbc\") \\\n","    .option(\"driver\", \"com.amazon.redshift.jdbc42.Driver\") \\\n","    .option(\"url\", \"jdbc:redshift://learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev?user=guest&password=Guest1!*\") \\\n","    .option(\"dbtable\", \"raw_data.session_timestamp\") \\\n","    .load()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cb87SiYQ3lX8"},"source":["df_user_session_channel.createOrReplaceTempView(\"user_session_channel\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LFMFrRpP3sP6"},"source":["df_session_timestamp.createOrReplaceTempView(\"session_timestamp\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GdiSxs1030G0"},"source":["channel_count_df = spark.sql(\"\"\"\n","    SELECT channel, count(distinct userId) uniqueUsers\n","    FROM session_timestamp st\n","    JOIN user_session_channel usc ON st.sessionID = usc.sessionID\n","    GROUP BY 1\n","    ORDER BY 1\n","\"\"\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"z1C5HKcd61_j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716481712,"user_tz":-540,"elapsed":4,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"a7a70360-b740-48bd-8dfa-063ce8ccd59f"},"source":["channel_count_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DataFrame[channel: string, uniqueUsers: bigint]"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","metadata":{"id":"whIte26D63hG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716512979,"user_tz":-540,"elapsed":29809,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"c46bef92-8c14-4432-aa9a-b30f94a5d3b7"},"source":["channel_count_df.show()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+---------+-----------+\n","|  channel|uniqueUsers|\n","+---------+-----------+\n","| Facebook|        889|\n","|   Google|        893|\n","|Instagram|        895|\n","|    Naver|        882|\n","|  Organic|        895|\n","|  Youtube|        889|\n","+---------+-----------+\n","\n"]}]},{"cell_type":"code","metadata":{"id":"vE8iL4vy6705"},"source":["channel_with_o_count_df = spark.sql(\"\"\"\n","    SELECT COUNT(1)\n","    FROM user_session_channel\n","    WHERE channel like '%o%'\n","\"\"\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QU44opcvDE54","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686716526179,"user_tz":-540,"elapsed":8022,"user":{"displayName":"문건희","userId":"18327497055746524936"}},"outputId":"903a68e2-a7e9-480c-ef1d-d059cf4e94f5"},"source":["channel_with_o_count_df.collect()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(count(1)=50864)]"]},"metadata":{},"execution_count":62}]}]}